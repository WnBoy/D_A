删除一颗二叉树的思路，分为三种情况：

1.删除叶子节点(比如：2, 5, 9, 12)
思路分析：
    (1)找到要删除的节点targetNode;
    (2)找到要删除节点的父节点parentNode;
    (3)判断要删除节点targetNode要删除节点targetNode是父节点parentNode的左子节点还是右子节点，
        如果要删除节点targetNode是父节点parentNode的左子节点，parentNode.left=null,
        如果要删除节点targetNode是父节点parentNode的右子节点，parentNode.right=null,

2.删除只有一颗子树的节点(比如：1)
思路分析：
    (1)找到要删除的节点targetNode;
    (2)找到要删除节点的父节点parentNode;
    (3)确定targetNode有左子节点还是有右子节点；
    (4)确定targetNode是parentNode的左子节点还是右子节点；
    (5)如果targetNode有左子节点
        如果targetNode是parentNode的左子节点，parentNode.left=targetNode.left;
        如果targetNode是parentNode的右子节点，parentNode.right=targetNode.left;
    (6)如果targetNode有右子节点
        如果targetNode是parentNode的左子节点，parentNode.left=targetNode.right;
        如果targetNode是parentNode的右子节点，parentNode.right=targetNode.right;

3.删除有两颗子树的节点(比如：7,3,10)
思路分析：
    (1)找到要删除的节点targetNode;
    (2)找到要删除节点的父节点parentNode;
    (3)两种方法：
        方法1：找到targetNode节点的右子节点的最小节点，使用临时变量temp将最小节点的值保存起来，
        删除这个最小节点，并且将保存的temp赋值给targetNode，即：targetNode.val=temp;
        方法2：找到targetNode节点的左子节点的最大节点，使用临时变量temp将最大节点的值保存起来，
        删除这个最大节点，并且将保存的temp赋值给targetNode，即：targetNode.val=temp;